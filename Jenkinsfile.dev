pipeline {
  agent any

  environment {
    SPRING_PROFILES_ACTIVE = 'prod'
    DB_URL = 'jdbc:postgresql://postgres:5432/franchise'
    DB_USER = 'franchiseuser'
    DB_PASS = credentials('db-pass')
    JWT_SECRET = credentials('jwt-secret')
    RECAPTCHA_SECRET = credentials('recaptcha-secret')
    RECAPTCHA_SITE_KEY = credentials('recaptcha-site-key')
    API_URL = '/api'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Generate .env files') {
      steps {
        sh '''
          cat > backend/.env <<EOF
DB_URL=$DB_URL
DB_USER=$DB_USER
DB_PASS=$DB_PASS
JWT_SECRET=$JWT_SECRET
RECAPTCHA_SECRET=$RECAPTCHA_SECRET
spring.profiles.active=prod
EOF

          cat > frontend/.env.production <<EOF
REACT_APP_RECAPTCHA_SITE_KEY=$RECAPTCHA_SITE_KEY
REACT_APP_API_URL=$API_URL
EOF
        '''
      }
    }

    stage('Build & Deploy PROD') {
      steps {
        sh 'docker-compose -f docker-compose.dev.yml down'
        sh 'docker-compose -f docker-compose.dev.yml build'
        sh 'docker-compose -f docker-compose.dev.yml up -d --remove-orphans'
      }
    }
  }
}
